{"version":3,"sources":["components/Inventario.js","components/Reportes.js","components/Venta.js","components/Configuracion.js","components/BottomBar.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","err","console","log","db","database","Inventario","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","gridList","flexWrap","transform","props","_onChange","event","target","name","value","setState","_onChangeNombre","nuevaTabla","iNombre","state","inputNombre","inventario","map","producto","nombre","toLowerCase","search","push","tablaInventario","handleClose","show","inputSell","handleCancel","edit","activeSearch","codigo","nombreProducto","descripcion","cantidadDisponible","precioUnidad","cantidadAgregar","editCantidad","errorProducto","helperProducto","errorCantidad","helperCantidad","errorPrecio","helperPrecio","handleNuevo","nuevo","imprimir","data","exportFromJSON","fileName","exportType","productos","seleccionado","productoEditar","rev","editAgregar","helperDescripcion","helperTipo","errorDescripcion","errorTipo","tipoProducto","_onKeyPress","bind","handleModifica","handleShow","handleGuardarCambios","handleClickTable","buscar","putProducto","ref","child","on","snapshot","val","array","Object","values","charCode","this","then","mensaje","id","cantidad","precio","_rev","suma","doc","parseInt","set","ret","ok","Grid","container","style","backgroundColor","item","xs","height","FormControl","fullWidth","noValidate","autoComplete","TextField","disabled","onChange","onKeyPress","variant","width","marginTop","label","size","List","Paper","overflow","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","index","key","hover","onClick","ButtonGroup","Button","e","error","helperText","Select","labelId","MenuItem","type","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","React","Component","createRef","formatter","Intl","NumberFormat","currency","Venta","handleProcesar","filtrado","alert","anioFiltro","totalVenta","totalProductos","request","ventas","used","tablaMostrar","obj","stringF","_id","substring","venta","parseFloat","total","anio","mes","dia","prod","tabla","fila","monto","tipo","montoVenta","cantidadVenta","tablaFiltrar","mesFiltro","diaFiltro","todo","original","procedimiento","filtro","consulta","medicamento","handleAnio","disAnio","disMes","disDia","handleMes","handleDia","hoy","getAllVentas","mostrar","toFixed","display","justifyContent","flexDirection","left","direction","alignItems","justify","minHeight","Typography","format","InputLabel","htmlFor","native","inputProps","handleTarjeta","showMetodoPago","showFolio","handleCloseFolio","folio","handleClosePass","showPass","handleCloseMetodoPago","brand","model","year","enventa","productoAgregar","folios","autofocus","adding","ventasDiarias","visualizacion","totalTarjeta","totalEfectivo","totalProducto","totalConsultas","totalProcedimientos","totalMedicamentos","sumaTotal","password","idBorrar","revBorrar","errorPass","helperPass","getAllenventa","getAllVentasDiarias","handleDel","agregarVenta","pagar","handleEfectivo","handleAceptarFolio","previousDay","nextDay","borrarVenta","handleAceptarCont","dt","Date","getFullYear","mesN","getMonth","toString","diaN","getDate","ventaImprimir","ventaImp","jsPDF","orientation","unit","putOnlyUsedFonts","floatPrecision","pageWidth","internal","pageSize","getWidth","setFont","setFontSize","setLineWidth","line","num","assign","autoTable","head","startY","body","styles","fontSize","halign","cellPadding","getHeight","autoPrint","save","notes","ventasD","formatoId","ventaDiaria","sumaTarjeta","sumaEfectivo","totalConsulta","tipoPago","efectivo","tarjeta","sale","reverse","sumaF","Math","random","replace","substr","ventaUnica","remove","prodAct","toISOString","split","join","idInv","cerrado","idN","folioV","a","once","update","productoKey","existe","i","componentDidMount","marginBotton","marginRight","marginLeft","PouchDB","require","default","dbinventario","dbVentas","dbConfig","Configuracion","config","seleccion","passAnterior","passNuevo","passConfirmar","helperNuevoPass","errorNuevoPAss","helperConfirmar","errorConfirmar","procesado","getAllinventario","getAllConfig","corregirDias","cambiarPAssword","actualizarTabla","put","eliminar","result","allDocs","include_docs","allNotes","rows","forEach","n","tablaProcesado","newId","newO","diaCorregido","idCorregido","status","componente","texto","InputLabelProps","shrink","placeholder","marginBottom","fontStyle","button","BottomBar","className","md","window","location","href","App","path","exact","component","Reportes","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56c169b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/BarraDerecha.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import GridList from '@material-ui/core/GridList';\r\nimport List from '@material-ui/core/List';\r\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import { fontSize } from '@material-ui/system';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Container from '@material-ui/core/Container';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Table from '@material-ui/core/Table';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Input from '@material-ui/core/Input';p\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport exportFromJSON from 'export-from-json'\r\n// FIREBASE\r\nimport firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAV1RFAEI358lpXv_7d81xb0KdRo4f-TEk\",\r\n    authDomain: \"tienda-aa5d3.firebaseapp.com\",\r\n    databaseURL: \"https://tienda-aa5d3.firebaseio.com\",\r\n    projectId: \"tienda-aa5d3\",\r\n    storageBucket: \"tienda-aa5d3.appspot.com\",\r\n    messagingSenderId: \"898170837567\",\r\n    appId: \"1:898170837567:web:346072753502ad054cf68a\",\r\n    measurementId: \"G-WX90RTSG4S\"\r\n  };\r\n  // Initialize Firebase\r\nif (!firebase.apps.length) {\r\n    try {\r\n     firebase.initializeApp(firebaseConfig)\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n// db = firebase.firestore();\r\n// firebase.initializeApp(firebaseConfig);\r\nlet db=firebase.database()\r\n\r\n\r\n\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// var PouchDB = require('pouchdb').default;\r\n// var dbinventario = new PouchDB('http://localhost:5984/inventario');\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    }\r\n}));\r\n\r\n\r\nclass Inventario extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productos: [],\r\n            inventario: [],\r\n            tablaInventario:[],\r\n            inputSell: \"\",\r\n            codigo: \"\",\r\n            nombreProducto: \"\",\r\n            descripcion: \"\",\r\n            cantidadDisponible: 0,\r\n            cantidadAgregar: 0,\r\n            precioUnidad: \"\",\r\n            activeSearch: false,\r\n            edit: true,\r\n            show: false,\r\n            seleccionado: \"\",\r\n            productoEditar: null,\r\n            rev: \"\",\r\n            editCantidad: true,\r\n            editAgregar: true,\r\n            nuevo: false,\r\n            helperCantidad: \"\",\r\n            helperDescripcion: \"\",\r\n            helperPrecio: \"\",\r\n            helperProducto: \"\",\r\n            helperTipo: \"\",\r\n            errorCantidad: false,\r\n            errorDescripcion: false,\r\n            errorPrecio: false,\r\n            errorProducto: false,\r\n            errorTipo: false,\r\n            tipoProducto: \"Nada\",\r\n            inputNombre:\"\"\r\n        };\r\n\r\n        this._onKeyPress = this._onKeyPress.bind(this);\r\n        this._onChange = this._onChange.bind(this);\r\n        this._onChangeNombre = this._onChangeNombre.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleModifica = this.handleModifica.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleNuevo = this.handleNuevo.bind(this);\r\n        this.handleGuardarCambios = this.handleGuardarCambios.bind(this);\r\n        this.handleClickTable = this.handleClickTable.bind(this);\r\n        this.buscar = this.buscar.bind(this);\r\n        this.putProducto = this.putProducto.bind(this);\r\n        this.imprimir = this.imprimir.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let inventarioFB=db.ref().child(\"INVENTARIO\")\r\n        inventarioFB.on('value', (snapshot) =>{\r\n            // console.log(snapshot.value)\r\n            if(snapshot.val()==null){\r\n                this.setState({\r\n                    inventario: [],\r\n                    tablaInventario: []\r\n                });\r\n            }else{\r\n                // console.log(snapshot.value)\r\n                const data = snapshot.val();\r\n                let array=Object.values(data)\r\n                this.setState({\r\n                    inventario: array,\r\n                    tablaInventario: array\r\n                });\r\n\r\n            }\r\n\r\n          });\r\n    }\r\n\r\n    _onKeyPress(event) {\r\n\r\n        if (event.charCode === 13) {\r\n            this.buscar(this.state.inputSell).then(data => {\r\n                if (data.mensaje == \"NO\") {\r\n                    this.setState({\r\n                        show: true\r\n                    });\r\n                    console.log(\"NO EXISTE EL PRODUCTO\")\r\n                } else {\r\n                    console.log(data.producto);\r\n                    console.log(\"SI EXISTE EL PRODUCTO\")\r\n                    this.handleModifica(data.producto);\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    _onChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n\r\n    };\r\n\r\n    _onChangeNombre = event => {\r\n        const { name, value } = event.target;\r\n        let nuevaTabla=[]\r\n        this.setState({\r\n            [name]: value\r\n        }, () => {\r\n            var iNombre= this.state.inputNombre;\r\n            \r\n            this.state.inventario.map(function (producto) {\r\n        \r\n                var str = producto.nombre.toLowerCase(); \r\n                // console.log(this.state.inventario)\r\n                var n = str.search(iNombre.toLowerCase());\r\n    \r\n                if(n>=0){\r\n                    nuevaTabla.push(producto)\r\n                }\r\n                // console.log(nuevaTabla)\r\n             \r\n                })\r\n    \r\n                this.setState({\r\n                    tablaInventario: nuevaTabla\r\n                }\r\n                )\r\n\r\n        });\r\n\r\n    };\r\n\r\n\r\n\r\n    handleClose = event => {\r\n        this.setState({\r\n            show: false,\r\n            inputSell: \"\"\r\n        });\r\n    };\r\n\r\n    handleCancel = event => {\r\n        this.setState({\r\n            edit: true,\r\n            activeSearch: false,\r\n            codigo: \"\",\r\n            nombreProducto: \"\",\r\n            descripcion: \"\",\r\n            cantidadDisponible: \"\",\r\n            precioUnidad: \"\",\r\n            cantidadAgregar: \"\",\r\n            inputSell: \"\",\r\n            editCantidad: true,\r\n            errorProducto: false,\r\n            helperProducto: \"\",\r\n            errorCantidad: false,\r\n            helperCantidad: \"\",\r\n            errorPrecio: false,\r\n            helperPrecio: \"\"\r\n        });\r\n    };\r\n\r\n    handleNuevo = event => {\r\n        this.setState({\r\n            edit: false,\r\n            activeSearch: true,\r\n            codigo: this.state.inputSell,\r\n            show: false,\r\n            editCantidad: false,\r\n            nuevo: true\r\n        });\r\n\r\n    };\r\n\r\n    imprimir = () => {\r\n        const data = this.state.inventario\r\n        const fileName = 'Reporte'\r\n        const exportType = 'xls'\r\n        exportFromJSON({ data, fileName, exportType })\r\n\r\n    };\r\n\r\n    handleClickTable(event) {\r\n        this.setState({\r\n            codigo: \"\",\r\n            nombreProducto: \"\",\r\n            descripcion: \"\",\r\n            cantidadDisponible: \"\",\r\n            precioUnidad: \"\",\r\n            cantidadAgregar: \"\",\r\n            inputSell: \"\"\r\n        });\r\n\r\n        this.buscar(event.target.id).then(data => {\r\n            if (data.mensaje == \"NO\") {\r\n                this.setState({\r\n                    show: true\r\n                });\r\n                console.log(\"NO EXISTE EL PRODUCTO\")\r\n            } else {\r\n                console.log(data.producto);\r\n                console.log(\"SI EXISTE EL PRODUCTO\")\r\n                this.handleModifica(data.producto);\r\n            }\r\n\r\n        })\r\n\r\n    };\r\n\r\n\r\n\r\n    handleModifica(producto) {\r\n        this.setState({\r\n            inputSell: \"\",\r\n            edit: false,\r\n            editAgregar: false,\r\n            activeSearch: true,\r\n            codigo: producto.id,\r\n            nombreProducto: producto.nombre,\r\n            descripcion: producto.descripcion,\r\n            cantidadDisponible: producto.cantidad,\r\n            precioUnidad: producto.precio,\r\n            rev: producto._rev,\r\n            tipoProducto: producto.tipoProducto\r\n        });\r\n    };\r\n\r\n    async handleGuardarCambios() {\r\n        this.setState({\r\n            errorProducto: false,\r\n            helperProducto: \"\",\r\n            errorCantidad: false,\r\n            helperCantidad: \"\",\r\n            errorPrecio: false,\r\n            helperPrecio: \"\",\r\n            inputSell: \"\",\r\n            inputNombre:\"\"\r\n            // tablaInventario: this.state.inventario\r\n\r\n        })\r\n        if (this.state.nombreProducto == \"\" || (this.state.cantidadDisponible == \"\" && this.state.cantidadDisponible != 0) || this.state.precioUnidad == \"\" || this.state.tipoProducto == \"Nada\") {\r\n            if (this.state.nombreProducto == \"\") {\r\n                this.setState({\r\n                    errorProducto: true,\r\n                    helperProducto: \"Campo Requerido\"\r\n                })\r\n            }\r\n            if (this.state.cantidadDisponible == \"\" && this.state.cantidadDisponible != 0) {\r\n                this.setState({\r\n                    errorCantidad: true,\r\n                    helperCantidad: \"Campo Requerido\"\r\n                })\r\n            }\r\n            if (this.state.precioUnidad == \"\") {\r\n                this.setState({\r\n                    errorPrecio: true,\r\n                    helperPrecio: \"Campo Requerido\"\r\n                })\r\n            }\r\n\r\n            if (this.state.tipoProducto == \"Nada\") {\r\n                this.setState({\r\n                    errorTipo: true,\r\n                    helperTipo: \"Campo Requerido\"\r\n                })\r\n            }\r\n\r\n            console.log(\"FALTA INFORMACION\")\r\n        }\r\n        else if (this.state.nuevo == false) {\r\n            var suma = 0;\r\n            if (this.state.cantidadAgregar == null || this.state.cantidadAgregar == \"\") {\r\n                suma = 0\r\n            } else {\r\n                suma = this.state.cantidadAgregar\r\n            }\r\n\r\n            let doc = {\r\n                id: this.state.codigo,\r\n                nombre: this.state.nombreProducto,\r\n                descripcion: this.state.descripcion,\r\n                cantidad: parseInt(suma) + parseInt(this.state.cantidadDisponible),\r\n                precio: this.state.precioUnidad,\r\n                tipoProducto: this.state.tipoProducto,\r\n            }\r\n\r\n            await this.putProducto(doc).then(data => {\r\n                this.setState({\r\n                    edit: true,\r\n                    activeSearch: false,\r\n                    codigo: \"\",\r\n                    nombreProducto: \"\",\r\n                    descripcion: \"\",\r\n                    cantidadDisponible: \"\",\r\n                    precioUnidad: \"\",\r\n                    cantidadAgregar: \"\",\r\n                    nuevo: false,\r\n                    editCantidad: true,\r\n                    editAgregar: true\r\n                });\r\n\r\n\r\n\r\n\r\n\r\n\r\n            })\r\n        } else {\r\n\r\n            let doc = {\r\n                id: this.state.inputSell,\r\n                nombre: this.state.nombreProducto,\r\n                descripcion: this.state.descripcion,\r\n                cantidad: this.state.cantidadDisponible,\r\n                precio: this.state.precioUnidad,\r\n                tipoProducto: this.state.tipoProducto\r\n            }\r\n\r\n            await this.putProducto(doc).then(data => {\r\n                this.setState({\r\n                    edit: true,\r\n                    activeSearch: false,\r\n                    codigo: \"\",\r\n                    nombreProducto: \"\",\r\n                    descripcion: \"\",\r\n                    cantidadDisponible: \"\",\r\n                    precioUnidad: \"\",\r\n                    cantidadAgregar: \"\",\r\n                    nuevo: false,\r\n                    editCantidad: true,\r\n                    editAgregar: true\r\n                });\r\n\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n        }\r\n\r\n        \r\n    };\r\n\r\n\r\n\r\n    async putProducto(doc) {\r\n        await db.ref().child(\"INVENTARIO\").child(doc.id).set(doc)\r\n        return doc;\r\n\r\n    };\r\n\r\n    async buscar(codigo) {\r\n        let ret = {\r\n            mensaje: \"NO\",\r\n            producto: {}\r\n        }\r\n\r\n\r\n        this.state.inventario.map(function (ok) {\r\n            if (ok.id == codigo) {\r\n                let productoEditar = ok;\r\n\r\n\r\n                ret.mensaje = \"SI\";\r\n                ret.producto = ok;\r\n            }\r\n        })\r\n        return ret;\r\n\r\n    };\r\n\r\n\r\n\r\n    handleShow() {\r\n        this.setState({\r\n            show: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Grid container style={{ backgroundColor: '#dddddd' }} >\r\n\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd' }}  ></Grid>\r\n                <Grid item xs={6}>\r\n                    {/* <Grid textAlign={'center'} xs={2} container style={{ backgroundColor: '#dddddd', height: '100vh' }} > </Grid> */}\r\n                    <Grid style={{ backgroundColor: '#dddddd', height: '100%' }} >\r\n\r\n                        <FormControl fullWidth noValidate autoComplete=\"off\">\r\n\r\n                            <TextField\r\n                                disabled={this.state.activeSearch}\r\n                                name={\"inputSell\"}\r\n                                onChange={this._onChange}\r\n                                onKeyPress={this._onKeyPress}\r\n                                id=\"outlined-basic\" variant=\"outlined\"\r\n                                value={this.state.inputSell}\r\n                                style={{ width: \"100%\", marginTop: \"50px\" }}\r\n                                label=\"Buscar por Codigo (LECTOR DE BARRAS)\" \r\n                                size=\"small\"\r\n                                />\r\n                                \r\n\r\n                            <TextField\r\n                                disabled={this.state.activeSearch}\r\n                                name={\"inputNombre\"}\r\n                                onChange={this._onChangeNombre}\r\n                                // onKeyPress={this._onKeyPress}\r\n                                id=\"outlined-basic\"\r\n                                variant=\"outlined\"\r\n                                value={this.state.inputNombre}\r\n                                style={{ width: \"100%\", marginTop: \"7px\" }}\r\n                                label=\"Buscar por Nombre (TECLADO)\"\r\n                                size=\"small\" />\r\n\r\n                            <List>\r\n\r\n                                <Paper style={{ overflow: 'auto', height: '55vh', marginTop: \"5px\" }}>\r\n\r\n                                    <div >\r\n\r\n                                        <Table stickyHeader aria-label=\"sticky table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\">ID</TableCell>\r\n                                                    <TableCell align=\"center\">Nombre</TableCell>\r\n                                                    {/* <TableCell align=\"right\">Descripcion</TableCell> */}\r\n                                                    <TableCell align=\"center\">Cantidad Disponible</TableCell>\r\n                                                    <TableCell align=\"center\">Tipo</TableCell>\r\n                                                    <TableCell align=\"center\">Precio Unidad</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n\r\n                                                {this.state.tablaInventario.map((producto, index, key) => {\r\n\r\n\r\n                                                    return (\r\n                                                        <TableRow hover id={producto.id} onClick={this.handleClickTable} key={index}>\r\n                                                            <TableCell id={producto.id} align=\"center\">{producto.id}</TableCell>\r\n                                                            <TableCell id={producto.id} align=\"center\">{producto.nombre}</TableCell>\r\n                                                            {/* <TableCell align=\"right\">{producto.descripción}</TableCell> */}\r\n                                                            <TableCell id={producto.id} align=\"center\">{producto.cantidad}</TableCell>\r\n                                                            <TableCell id={producto.id} align=\"center\">{producto.tipoProducto}</TableCell>\r\n                                                            <TableCell id={producto.id} align=\"center\">{producto.precio}</TableCell>\r\n\r\n                                                        </TableRow>\r\n\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </Paper>\r\n\r\n                            </List>\r\n\r\n                        </FormControl>\r\n\r\n                        <ButtonGroup fullWidth color=\"primary\" aria-label=\"full width outlined button group\">\r\n\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={(e) => this.imprimir()}>Exportar Excel</Button >\r\n\r\n                        </ButtonGroup>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd', height: '100vh' }}></Grid>\r\n                <Grid item xs={4}>\r\n\r\n                    <TextField\r\n                        disabled={true}\r\n                        label=\"Codigo\"\r\n                        name={\"codigo\"}\r\n                        onChange={this._onChange}\r\n                        variant=\"outlined\"\r\n                        value={this.state.codigo}\r\n                        style={{\r\n                            width: \"90%\",\r\n                            marginTop: \"50px\"\r\n                        }} />\r\n\r\n                    <TextField\r\n                        error={this.state.errorProducto}\r\n                        helperText={this.state.helperProducto}\r\n                        disabled={this.state.edit}\r\n                        label=\"Nombre Producto\"\r\n                        name={\"nombreProducto\"}\r\n                        onChange={this._onChange}\r\n                        variant=\"outlined\"\r\n                        value={this.state.nombreProducto}\r\n                        style={{ width: \"40%\", marginTop: \"50px\" }} />\r\n\r\n                    <FormControl variant=\"filled\">\r\n                        <Select\r\n                            error={this.state.errorTipo}\r\n                            helperText={this.state.helperTipo}\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"tipoProducto\"\r\n                            label=\"Tipo Producto\"\r\n                            value={this.state.tipoProducto}\r\n                            onChange={this._onChange}\r\n                            style={{ width: \"100%\", marginTop: \"50px\" }}\r\n                            disabled={this.state.edit}\r\n\r\n                        >   <MenuItem disabled value=\"Nada\">\r\n                                <em>Tipo de Producto</em>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"Medicamento\">Medicamento</MenuItem>\r\n                            <MenuItem value=\"Procedimiento\">Procedimiento</MenuItem>\r\n                            <MenuItem value=\"Consulta\">Consulta</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        error={this.state.errorDescripcion}\r\n                        helperText={this.state.helperDescripcion}\r\n                        disabled={this.state.edit}\r\n                        label=\"Descripción\"\r\n                        name={\"descripcion\"}\r\n                        onChange={this._onChange}\r\n                        variant=\"outlined\"\r\n                        value={this.state.descripcion}\r\n                        style={{ width: \"90%\", marginTop: \"50px\" }} />\r\n\r\n                    <TextField\r\n                        error={this.state.errorCantidad}\r\n                        helperText={this.state.helperCantidad}\r\n                        disabled={this.state.editCantidad}\r\n                        type=\"number\"\r\n                        label=\"Disponible\"\r\n                        name={\"cantidadDisponible\"}\r\n                        onChange={this._onChange}\r\n                        variant=\"outlined\"\r\n                        value={this.state.cantidadDisponible}\r\n                        style={{ width: \"40%\", marginTop: \"50px\" }} />\r\n\r\n                    <TextField\r\n                        disabled={this.state.editAgregar}\r\n                        type=\"number\" label=\"Agregar\"\r\n                        name={\"cantidadAgregar\"}\r\n                        onChange={this._onChange}\r\n                        variant=\"outlined\"\r\n                        value={this.state.cantidadAgregar}\r\n                        style={{ width: \"40%\", marginTop: \"50px\" }} />\r\n\r\n                    <TextField\r\n                        error={this.state.errorPrecio}\r\n                        helperText={this.state.helperPrecio}\r\n                        disabled={this.state.edit}\r\n                        type=\"number\"\r\n                        label=\"Precio Unidad\"\r\n                        name={\"precioUnidad\"}\r\n                        onChange={this._onChange}\r\n                        variant=\"outlined\"\r\n                        value={this.state.precioUnidad}\r\n                        style={{ width: \"90%\", marginTop: \"50px\" }} />\r\n\r\n\r\n\r\n                    <br></br><br></br><br></br>\r\n\r\n                    <Button\r\n                        disabled={this.state.edit} variant=\"outlined\" color=\"primary\" onClick={this.handleGuardarCambios}>Guardar</Button>\r\n                    <Button disabled={this.state.edit} variant=\"outlined\" color=\"secondary\" onClick={this.handleCancel}>Cancelar</Button>\r\n                </Grid>\r\n\r\n                <Dialog\r\n                    open={this.state.show}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"No se encuentra Producto en el Inventario\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            ¿Desea agregar el producto?\r\n          </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleNuevo} color=\"primary\">\r\n                            Si\r\n          </Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                            No\r\n          </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventario;","import React from 'react';\r\nimport '../styles/BarraDerecha.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import GridList from '@material-ui/core/GridList';\r\nimport List from '@material-ui/core/List';\r\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import { fontSize } from '@material-ui/system';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Container from '@material-ui/core/Container';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport exportFromJSON from 'export-from-json'\r\nimport firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAV1RFAEI358lpXv_7d81xb0KdRo4f-TEk\",\r\n    authDomain: \"tienda-aa5d3.firebaseapp.com\",\r\n    databaseURL: \"https://tienda-aa5d3.firebaseio.com\",\r\n    projectId: \"tienda-aa5d3\",\r\n    storageBucket: \"tienda-aa5d3.appspot.com\",\r\n    messagingSenderId: \"898170837567\",\r\n    appId: \"1:898170837567:web:346072753502ad054cf68a\",\r\n    measurementId: \"G-WX90RTSG4S\"\r\n  };\r\n  // Initialize Firebase\r\nif (!firebase.apps.length) {\r\n    try {\r\n        firebase.initializeApp(firebaseConfig)\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n// db = firebase.firestore();\r\n// firebase.initializeApp(firebaseConfig);\r\nlet db=firebase.database()\r\n// var PouchDB = require('pouchdb').default;\r\n// var dbVentas = new PouchDB('http://localhost:5984/ventas');\r\n\r\n\r\nconst ref = React.createRef();\r\n\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n});\r\n\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n//     paper: {\r\n//         padding: theme.spacing(2),\r\n//         textAlign: 'center',\r\n//         color: theme.palette.text.secondary,\r\n//     },\r\n//     gridList: {\r\n//         flexWrap: 'nowrap',\r\n//         // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n//         transform: 'translateZ(0)',\r\n//     }\r\n// }));\r\n\r\n\r\nclass Venta extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anioFiltro: 0,\r\n            mesFiltro: \"\",\r\n            diaFiltro: \"\",\r\n            disAnio: true,\r\n            disMes: true,\r\n            disDia: true,\r\n            filtrado: 0,\r\n            ventas: [],\r\n            montoVenta: 0,\r\n            cantidadVenta: 0,\r\n            tablaMostrar: [],\r\n            tablaFiltrar:[],\r\n            hoy: false\r\n\r\n        };\r\n        this._onChange = this._onChange.bind(this);\r\n        this.handleAnio = this.handleAnio.bind(this);\r\n        this.handleMes = this.handleMes.bind(this);\r\n        this.handleDia = this.handleDia.bind(this);\r\n        this.handleProcesar = this.handleProcesar.bind(this);\r\n        this.getAllVentas = this.getAllVentas.bind(this);\r\n        this.imprimir = this.imprimir.bind(this);\r\n        this.todo = this.todo.bind(this);\r\n        this.procedimiento = this.procedimiento.bind(this);\r\n        this.consulta = this.consulta.bind(this);\r\n        this.medicamento = this.medicamento.bind(this);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllVentas();\r\n\r\n    }\r\n\r\n    async getAllVentas() {\r\n        let ventas=db.ref().child(\"VENTAS\")\r\n        ventas.on('value', (snapshot) => {\r\n            let data = snapshot.val();\r\n            let array = Object.values(data);\r\n            this.setState({\r\n                ventas: array\r\n            });\r\n        })\r\n\r\n\r\n        // console.log(this.state.ventas)\r\n        console.log(\"ESTAS VENTAS SIII\")\r\n        return 0;\r\n    };\r\n\r\n\r\n    _onChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n    handleProcesar = () => {\r\n        if (this.state.filtrado == 0) {\r\n            alert(\"SELECCIONE TIPO DE REPORTE\")\r\n\r\n            // PROCESADO PARA EL AÑO\r\n\r\n        } else if (this.state.filtrado == 1) {\r\n            if (this.state.anioFiltro == 0) {\r\n                alert(\"SELECCIONE AÑO PARA PROCESAR INFORMACION\")\r\n            } else {\r\n                let totalVenta = 0\r\n                let totalProductos = 0\r\n                let request = this.state.ventas\r\n                let used = []\r\n                let anioFiltro = this.state.anioFiltro\r\n                let tablaMostrar = []\r\n\r\n                request.map(function (obj) {\r\n                    let stringF = obj._id\r\n\r\n\r\n                    if (parseInt(stringF.substring(0, 4)) == anioFiltro && stringF.substring(8, 10) != \"un\") {\r\n                        used.push(obj)\r\n                    }\r\n                    \r\n\r\n                });\r\n\r\n                used.map(function (obj) {\r\n                    obj.venta.map(function (venta) {\r\n                        totalVenta = totalVenta + parseFloat(venta.total)\r\n\r\n                    })\r\n                });\r\n\r\n\r\n                used.map(function (obj) {\r\n                    let anio = obj.anio\r\n                    let mes = obj.mes\r\n                    let dia = obj.dia\r\n\r\n                    obj.venta.map(function (venta) {\r\n                        totalProductos = totalProductos + venta.prod.length\r\n                        venta.prod.map(function (tabla) {\r\n                            // console.log(tabla)\r\n                            let fila = { anio: anio, mes: mes, dia: dia, nombre: tabla.producto, monto: tabla.precio, tipo: tabla.tipoProducto }\r\n                            tablaMostrar.push(fila)\r\n                        })\r\n\r\n\r\n                    })\r\n                });\r\n\r\n\r\n                // console.log(tablaMostrar)\r\n\r\n                this.setState({\r\n                    montoVenta: totalVenta,\r\n                    cantidadVenta: totalProductos,\r\n                    tablaMostrar: tablaMostrar,\r\n                    tablaFiltrar: tablaMostrar\r\n                });\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n            // PROCESADO PARA EL AÑO Y MES\r\n        } else if (this.state.filtrado === 2) {\r\n            if (this.state.anioFiltro == 0 || this.state.mesFiltro == \"\") {\r\n                alert(\"SELECCIONE AÑO Y MES PARA PROCESAR INFORMACION\")\r\n            } else {\r\n                let totalVenta = 0\r\n                let totalProductos = 0\r\n                let request = this.state.ventas\r\n                let used = []\r\n                let anioFiltro = this.state.anioFiltro\r\n                let mesFiltro = this.state.mesFiltro\r\n                let tablaMostrar = []\r\n                request.map(function (obj) {\r\n                    let stringF = obj._id\r\n\r\n\r\n                    if ((parseInt(stringF.substring(0, 4)) == anioFiltro) && stringF.substring(5, 7) == mesFiltro && stringF.substring(8, 10) != \"un\") {\r\n                        used.push(obj)\r\n                    }\r\n                    // console.log(used)\r\n\r\n\r\n                });\r\n                used.map(function (obj) {\r\n                    obj.venta.map(function (venta) {\r\n                        totalVenta = totalVenta + parseFloat(venta.total)\r\n\r\n                    })\r\n                });\r\n\r\n\r\n                used.map(function (obj) {\r\n                    let anio = obj.anio\r\n                    let mes = obj.mes\r\n                    let dia = obj.dia\r\n\r\n                    obj.venta.map(function (venta) {\r\n                        totalProductos = totalProductos + venta.prod.length\r\n                        venta.prod.map(function (tabla) {\r\n                            // console.log(tabla)\r\n                            let fila = { anio: anio, mes: mes, dia: dia, nombre: tabla.producto, monto: tabla.precio, tipo: tabla.tipoProducto }\r\n                            tablaMostrar.push(fila)\r\n                        })\r\n\r\n\r\n                    })\r\n                });\r\n\r\n\r\n\r\n                // console.log(tablaMostrar)\r\n\r\n                this.setState({\r\n                    montoVenta: totalVenta,\r\n                    cantidadVenta: totalProductos,\r\n                    tablaMostrar: tablaMostrar,\r\n                    tablaFiltrar: tablaMostrar\r\n                });\r\n\r\n\r\n        \r\n            }\r\n\r\n            // PROCESADO PARA EL AÑO - MES Y DIA\r\n        } else if (this.state.filtrado == 3) {\r\n            if (this.state.anioFiltro == 0 || this.state.mesFiltro == \"\" || this.state.diaFiltro == \"\") {\r\n                alert(\"SELECCIONE AÑO, MES Y DIA PARA PROCESAR INFORMACION\")\r\n            } else {\r\n                let totalVenta = 0\r\n                let totalProductos = 0\r\n                let request = this.state.ventas\r\n                let used = []\r\n                let anioFiltro = this.state.anioFiltro\r\n                let mesFiltro = this.state.mesFiltro\r\n                let diaFiltro = this.state.diaFiltro\r\n                let tablaMostrar = []\r\n                request.map(function (obj) {\r\n                    let stringF = obj._id\r\n\r\n\r\n                    if ((parseInt(stringF.substring(0, 4)) == anioFiltro) && stringF.substring(5, 7) == mesFiltro && stringF.substring(8, 10) == diaFiltro) {\r\n                        used.push(obj)\r\n                    }\r\n                    // console.log(used)\r\n\r\n\r\n                });\r\n                used.map(function (obj) {\r\n                    obj.venta.map(function (venta) {\r\n                        totalVenta = totalVenta + parseFloat(venta.total)\r\n                        // return 0\r\n                    })\r\n                    // return 0\r\n                });\r\n\r\n\r\n                used.map(function (obj) {\r\n                    let anio = obj.anio\r\n                    let mes = obj.mes\r\n                    let dia = obj.dia\r\n\r\n                    obj.venta.map(function (venta) {\r\n                        totalProductos = totalProductos + venta.prod.length\r\n                        venta.prod.map(function (tabla) {\r\n                            // console.log(tabla)\r\n                            let fila = { anio: anio, mes: mes, dia: dia, nombre: tabla.producto, monto: tabla.precio,  tipo: tabla.tipoProducto }\r\n                            tablaMostrar.push(fila)\r\n                        })\r\n\r\n\r\n                    })\r\n                });\r\n\r\n                this.setState({\r\n                    montoVenta: totalVenta,\r\n                    cantidadVenta: totalProductos,\r\n                    tablaMostrar: tablaMostrar,\r\n                    tablaFiltrar: tablaMostrar\r\n                });\r\n\r\n\r\n                // console.log(used)\r\n\r\n\r\n\r\n                // console.log(this.state.anioFiltro)\r\n                // console.log(this.state.mesFiltro)\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    todo = () => {\r\n        let original=this.state.tablaFiltrar\r\n        let suma=0\r\n        original.map(function (venta) {\r\n                suma=parseFloat(venta.monto)+suma\r\n            \r\n\r\n\r\n        })\r\n        // console.log(suma)\r\n        this.setState({\r\n            tablaMostrar: this.state.tablaFiltrar,\r\n            montoVenta: suma,\r\n            cantidadVenta: original.length\r\n\r\n        })\r\n        \r\n    }\r\n\r\n    procedimiento = () => {\r\n        let filtro = []\r\n        let original=this.state.tablaFiltrar\r\n        let suma=0\r\n        original.map(function (venta) {\r\n            if (venta.tipo===\"Procedimiento\"){\r\n                filtro.push(venta)\r\n                // console.log(venta)\r\n                suma=parseFloat(venta.monto)+suma\r\n            }\r\n\r\n\r\n        })\r\n        // console.log(suma)\r\n        this.setState({\r\n            tablaMostrar: filtro,\r\n            montoVenta: suma,\r\n            cantidadVenta: filtro.length\r\n\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    consulta = () => {\r\n        let filtro = []\r\n        let original=this.state.tablaFiltrar\r\n        let suma=0\r\n        original.map(function (venta) {\r\n            if (venta.tipo===\"Consulta\"){\r\n                filtro.push(venta)\r\n                // console.log(venta)\r\n                suma=parseFloat(venta.monto)+suma\r\n            }\r\n\r\n\r\n        })\r\n        // console.log(suma)\r\n        this.setState({\r\n            tablaMostrar: filtro,\r\n            montoVenta: suma,\r\n            cantidadVenta: filtro.length\r\n\r\n        })\r\n    }\r\n\r\n    medicamento = () => {\r\n        let filtro = []\r\n        let original=this.state.tablaFiltrar\r\n        let suma=0\r\n        original.map(function (venta) {\r\n            if (venta.tipo===\"Medicamento\"){\r\n                filtro.push(venta)\r\n                // console.log(venta)\r\n                suma=parseFloat(venta.monto)+suma\r\n            }\r\n\r\n\r\n        })\r\n        // console.log(suma)\r\n        this.setState({\r\n            tablaMostrar: filtro,\r\n            montoVenta: suma,\r\n            cantidadVenta: filtro.length\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    imprimir = () => {\r\n        const data = this.state.tablaMostrar\r\n        const fileName = 'Reporte'\r\n        const exportType = 'xls'\r\n        exportFromJSON({ data, fileName, exportType })\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // HANDLE DE BOTONES DE FILTRO\r\n    handleAnio = () => {\r\n        this.setState({\r\n            disAnio: false,\r\n            disMes: true,\r\n            disDia: true,\r\n            diaFiltro: \"\",\r\n            mesFiltro: \"\",\r\n            filtrado: 1\r\n        });\r\n    };\r\n\r\n    handleMes = () => {\r\n        this.setState({\r\n            disAnio: false,\r\n            disMes: false,\r\n            disDia: true,\r\n            diaFiltro: \"\",\r\n            filtrado: 2\r\n        });\r\n    };\r\n\r\n    handleDia = () => {\r\n        this.setState({\r\n            disAnio: false,\r\n            disMes: false,\r\n            disDia: false,\r\n            filtrado: 3\r\n        });\r\n    };\r\n\r\n\r\n    /////////////////////////////////\r\n\r\n    render() {\r\n        let mostrar;\r\n        if (this.state.hoy) {\r\n            mostrar = \"OK\"\r\n\r\n\r\n        } else\r\n\r\n            mostrar =\r\n                <div>\r\n\r\n\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {/* <TableCell align=\"center\">Indice</TableCell> */}\r\n                                <TableCell align=\"center\">Fecha</TableCell>\r\n                                <TableCell align=\"center\">Nombre</TableCell>\r\n                                <TableCell align=\"center\">Tipo</TableCell>\r\n                                <TableCell align=\"center\">Monto</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n                            {this.state.tablaMostrar.map((producto, index, key) => {\r\n\r\n\r\n                                return (\r\n                                    <TableRow key={index}>\r\n                                        {/* <TableCell width=\"5%\"align=\"center\">{index + 1}</TableCell> */}\r\n                                        <TableCell width=\"25%\"align=\"center\">{producto.dia}/{producto.mes}/{producto.anio}</TableCell>\r\n                                        <TableCell width=\"25%\" align=\"center\">{producto.nombre}</TableCell>\r\n                                        <TableCell width=\"25%\" align=\"center\">{producto.tipo}</TableCell>\r\n                                        <TableCell width=\"25%\"align=\"center\">${parseFloat(producto.monto).toFixed(2)}</TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n\r\n                                )\r\n                            })}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n\r\n\r\n        return (\r\n\r\n            <Grid container style={{ backgroundColor: '#dddddd' }} >\r\n\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd' }}  ></Grid>\r\n                <Grid item xs={6}>\r\n                    {/* <Grid textAlign={'center'} xs={2} container style={{ backgroundColor: '#dddddd', height: '100vh' }} > </Grid> */}\r\n                    <Grid style={{ backgroundColor: '#dddddd', height: '100%' }} >\r\n\r\n                        <FormControl fullWidth noValidate autoComplete=\"off\">\r\n\r\n                            <List >\r\n                            <ButtonGroup fullWidth color=\"primary\" aria-label=\"full width outlined button group\">\r\n\r\n<Button variant=\"contained\" color=\"secondary\" onClick={(e) => this.todo()}>TODO</Button >\r\n<Button variant=\"contained\" color=\"primary\" onClick={(e) => this.medicamento()}>Medicamento</Button >\r\n<Button variant=\"contained\" color=\"primary\" onClick={(e) => this.procedimiento()}>Procedimiento</Button >\r\n<Button variant=\"contained\" color=\"primary\" onClick={(e) => this.consulta()}>Consulta</Button >\r\n\r\n</ButtonGroup>\r\n\r\n                                <Paper style={{ overflow: 'auto', height: '70vh', marginTop: \"30px\" }}>\r\n\r\n                                    <div ref={ref}>\r\n\r\n                                        {mostrar}\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"App\">\r\n                                        <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n                                            {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n                                        </Pdf>\r\n\r\n                                    </div> */}\r\n\r\n\r\n\r\n                                </Paper>\r\n\r\n                            </List>\r\n\r\n                        </FormControl>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd', height: '100vh' }}></Grid>\r\n                <Grid item xs={4}>\r\n\r\n\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-start\", flexDirection: \"column\", textAlign: \"center\", backgroundColor: '#bbbbbb', height: '100%' }}>\r\n                        <Grid style={{ left: \"30%\", height: '50%', backgroundColor: '#ffffff' }} >\r\n\r\n\r\n                            <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '100vh' }} style={{ left: \"50%\", height: '100%', backgroundColor: '#cccccc' }}>\r\n\r\n                                <Typography variant=\"h4\"> TOTAL Vendido</Typography>\r\n\r\n                                <Typography variant=\"h4\">{formatter.format(this.state.montoVenta)}</Typography>\r\n\r\n                                <Typography variant=\"h4\"> Total Productos</Typography>\r\n\r\n                                <Typography variant=\"h4\">{this.state.cantidadVenta}</Typography>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid style={{ display: \"flex\", justifyContent: \"flex-start\", flexDirection: \"column\", textAlign: \"center\", left: \"50%\", height: '50%', backgroundColor: '#ffffff' }} >\r\n\r\n                            <Typography variant=\"h4\">Configuracion de Reporte</Typography>\r\n                            <ButtonGroup fullWidth color=\"primary\" aria-label=\"full width outlined button group\">\r\n\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={(e) => this.handleAnio()}>Anual</Button >\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={(e) => this.handleMes()}>Mensual</Button >\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={(e) => this.handleDia()}>Diario</Button >\r\n                            </ButtonGroup>\r\n\r\n                            <FormControl disabled={this.state.disAnio} variant=\"filled\" >\r\n                                <InputLabel htmlFor=\"filled-age-native-simple\">Año</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    value={this.state.anioFiltro}\r\n                                    onChange={this._onChange}\r\n                                    inputProps={{\r\n                                        name: 'anioFiltro',\r\n                                        id: 'filled-age-native-simple',\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\" />\r\n                                    <option value={2020}>2020</option>\r\n                                    <option value={2021}>2021</option>\r\n                                    <option value={2022}>2022</option>\r\n                                    <option value={2023}>2023</option>\r\n                                    <option value={2024}>2024</option>\r\n                                    <option value={2025}>2025</option>\r\n                                    <option value={2026}>2026</option>\r\n                                    <option value={2027}>2027</option>\r\n                                    <option value={2028}>2028</option>\r\n                                    <option value={2029}>2028</option>\r\n                                    <option value={2030}>2028</option>\r\n                                    <option value={2031}>2028</option>\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <FormControl id=\"imprimir\" disabled={this.state.disMes} variant=\"filled\" >\r\n                                <InputLabel htmlFor=\"filled-age-native-simple\">Mes</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    value={this.state.mesFiltro}\r\n                                    onChange={this._onChange}\r\n                                    inputProps={{\r\n                                        name: 'mesFiltro',\r\n                                        id: 'filled-age-native-simple',\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\" />\r\n                                    <option value={\"01\"}>Enero</option>\r\n                                    <option value={\"02\"}>Febrero</option>\r\n                                    <option value={\"03\"}>Marzo</option>\r\n                                    <option value={\"04\"}>Abril</option>\r\n                                    <option value={\"05\"}>Mayo</option>\r\n                                    <option value={\"06\"}>Junio</option>\r\n                                    <option value={\"07\"}>Julio</option>\r\n                                    <option value={\"08\"}>Agosto</option>\r\n                                    <option value={\"09\"}>Septiembre</option>\r\n                                    <option value={\"10\"}>Octubre</option>\r\n                                    <option value={\"11\"}>Noviembre</option>\r\n                                    <option value={\"12\"}>Diciembre</option>\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n\r\n                            <FormControl disabled={this.state.disDia} variant=\"filled\" >\r\n                                <InputLabel htmlFor=\"filled-age-native-simple\">Dia</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    value={this.state.diaFiltro}\r\n                                    onChange={this._onChange}\r\n                                    inputProps={{\r\n                                        name: 'diaFiltro',\r\n                                        id: 'filled-age-native-simple',\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\" />\r\n                                    <option value={\"01\"}>01</option>\r\n                                    <option value={\"02\"}>02</option>\r\n                                    <option value={\"03\"}>03</option>\r\n                                    <option value={\"04\"}>04</option>\r\n                                    <option value={\"05\"}>05</option>\r\n                                    <option value={\"06\"}>06</option>\r\n                                    <option value={\"07\"}>07</option>\r\n                                    <option value={\"08\"}>08</option>\r\n                                    <option value={\"09\"}>09</option>\r\n                                    <option value={\"10\"}>10</option>\r\n                                    <option value={\"11\"}>11</option>\r\n                                    <option value={\"12\"}>12</option>\r\n                                    <option value={\"13\"}>13</option>\r\n                                    <option value={\"14\"}>14</option>\r\n                                    <option value={\"15\"}>15</option>\r\n                                    <option value={\"16\"}>16</option>\r\n                                    <option value={\"17\"}>17</option>\r\n                                    <option value={\"18\"}>18</option>\r\n                                    <option value={\"19\"}>19</option>\r\n                                    <option value={\"20\"}>20</option>\r\n                                    <option value={\"21\"}>21</option>\r\n                                    <option value={\"22\"}>22</option>\r\n                                    <option value={\"23\"}>23</option>\r\n                                    <option value={\"24\"}>24</option>\r\n                                    <option value={\"25\"}>25</option>\r\n                                    <option value={\"26\"}>26</option>\r\n                                    <option value={\"27\"}>27</option>\r\n                                    <option value={\"28\"}>28</option>\r\n                                    <option value={\"29\"}>29</option>\r\n                                    <option value={\"30\"}>30</option>\r\n                                    <option value={\"31\"}>31</option>\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <ButtonGroup fullWidth color=\"primary\" aria-label=\"full width outlined button group\">\r\n\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={(e) => this.handleProcesar()}>Procesar Reporte</Button >\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={(e) => this.imprimir()}>Exportar Excel</Button >\r\n\r\n                            </ButtonGroup>\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Venta;","import React from 'react';\r\nimport '../styles/BarraDerecha.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport List from '@material-ui/core/List';\r\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import { fontSize } from '@material-ui/system';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Container from '@material-ui/core/Container';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Input from '@material-ui/core/Input';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import { AutoSizer} from 'react-virtualized';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable'\r\n// import NewWindow from 'react-new-window';\r\nimport firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAV1RFAEI358lpXv_7d81xb0KdRo4f-TEk\",\r\n    authDomain: \"tienda-aa5d3.firebaseapp.com\",\r\n    databaseURL: \"https://tienda-aa5d3.firebaseio.com\",\r\n    projectId: \"tienda-aa5d3\",\r\n    storageBucket: \"tienda-aa5d3.appspot.com\",\r\n    messagingSenderId: \"898170837567\",\r\n    appId: \"1:898170837567:web:346072753502ad054cf68a\",\r\n    measurementId: \"G-WX90RTSG4S\"\r\n  };\r\n  // Initialize Firebase\r\nif (!firebase.apps.length) {\r\n    try {\r\n        firebase.initializeApp(firebaseConfig)\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n// db = firebase.firestore();\r\n// firebase.initializeApp(firebaseConfig);\r\nlet db=firebase.database()\r\n\r\n\r\n\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n});\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    }\r\n}));\r\n\r\n\r\nclass Venta extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productos: [],\r\n            brand: \"Ford\",\r\n            model: \"Mustang\",\r\n            color: \"red\",\r\n            year: 1964,\r\n            enventa: [],\r\n            inputSell: \"\",\r\n            inventario: [],\r\n            productoAgregar: \"\",\r\n            show: false,\r\n            folios: \"\",\r\n            disabled: false,\r\n            autofocus: true,\r\n            adding: true,\r\n            suma: 0,\r\n            showMetodoPago: false,\r\n            showFolio: false,\r\n            name: \"\",\r\n            folio: \"\",\r\n            ventasDiarias: [],\r\n            dia: \"\",\r\n            mes: \"\",\r\n            anio: \"\",\r\n            visualizacion: 1,\r\n            totalTarjeta: 0,\r\n            totalEfectivo: 0,\r\n            totalProducto: 0,\r\n            totalConsultas: 0,\r\n            totalProcedimientos: 0,\r\n            totalMedicamentos: 0,\r\n            sumaTotal: 0,\r\n            showPass: false,\r\n            password: \"\",\r\n            idBorrar: \"\",\r\n            revBorrar: \"\",\r\n            errorPass: false,\r\n            helperPass: \"\"\r\n\r\n\r\n        };\r\n\r\n        this._onKeyPress = this._onKeyPress.bind(this);\r\n        this._onChange = this._onChange.bind(this);\r\n        this.getAllenventa = this.getAllenventa.bind(this);\r\n        this.getAllVentasDiarias = this.getAllVentasDiarias.bind(this);\r\n\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleNuevo = this.handleNuevo.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleDel = this.handleDel.bind(this);\r\n        this.agregarVenta = this.agregarVenta.bind(this);\r\n        this.pagar = this.pagar.bind(this);\r\n        this.handleCloseMetodoPago = this.handleCloseMetodoPago.bind(this);\r\n        this.handleEfectivo = this.handleEfectivo.bind(this);\r\n        this.handleTarjeta = this.handleTarjeta.bind(this);\r\n        this.handleAceptarFolio = this.handleAceptarFolio.bind(this);\r\n        this.handleCloseFolio = this.handleCloseFolio.bind(this);\r\n        this.previousDay = this.previousDay.bind(this);\r\n        this.nextDay = this.nextDay.bind(this);\r\n        this.borrarVenta = this.borrarVenta.bind(this);\r\n        this.handleClosePass = this.handleClosePass.bind(this);\r\n        this.handleAceptarCont = this.handleAceptarCont.bind(this);\r\n        this.imprimir = this.imprimir.bind(this);\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n\r\n        let dt = new Date();\r\n        let anio = (dt.getFullYear())\r\n        let mesN = (dt.getMonth()) + 1\r\n        let mes;\r\n        if (mesN < 10) {\r\n            mes = \"0\" + mesN.toString()\r\n        } else {\r\n            mes = mesN\r\n        }\r\n        let diaN = (dt.getDate())\r\n        let dia;\r\n        if (diaN < 10) {\r\n            dia = \"0\" + diaN.toString()\r\n        } else {\r\n            dia = diaN\r\n        }\r\n\r\n        await this.setState({\r\n            dia: dia,\r\n            mes: mes,\r\n            anio: anio\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        let inventarioFB=db.ref().child(\"INVENTARIO\")\r\n        inventarioFB.on('value', (snapshot) =>{\r\n            if(snapshot.val()==null){\r\n                // console.log(\"ES NULO\")\r\n                this.setState({\r\n                    inventario: []\r\n                });\r\n\r\n            }else{\r\n                const data = snapshot.val();\r\n                // console.log(snapshot.val())\r\n                let array=Object.values(data)\r\n                console.log(array)\r\n                this.setState({\r\n                    inventario: array\r\n                });\r\n\r\n            }\r\n\r\n          });\r\n\r\n\r\n        this.getAllVentasDiarias()\r\n        this.getAllenventa()\r\n    }\r\n\r\n    async borrarVenta(id, rev) {\r\n        this.setState({\r\n            showPass: true,\r\n            idBorrar: id\r\n        })\r\n        console.log(id)\r\n\r\n    }\r\n\r\n    async imprimir(id) {\r\n        let ventasDiarias = this.state.ventasDiarias\r\n        let ventaImprimir = []\r\n\r\n        await ventasDiarias.map((ventaImp) => {\r\n            let string = ventaImp._id\r\n            if (string === id) {\r\n                // console.log(\"ES IGUAL\")\r\n                ventaImprimir = ventaImp\r\n            } else {\r\n                // console.log(\"NO ES IGUAL\")\r\n            }\r\n\r\n        })\r\n        // console.log( jsPDF.getFontList())\r\n        var doc = jsPDF({\r\n            orientation: 'l',\r\n            unit: 'mm',\r\n            format: [297.64, 420.945],\r\n            putOnlyUsedFonts: true,\r\n            floatPrecision: 16 // or \"smart\", default is 16\r\n        });\r\n       \r\n        var pageWidth = doc.internal.pageSize.width || doc.internal.pageSize.getWidth();\r\n        // console.log(pageWidth)\r\n        // doc.setFontType('bold');\r\n        doc.setFont('Time New Roman')\r\n        doc.setFontSize(10)\r\n        doc.text('Dra. Elena Martínez Guerra', pageWidth / 2, 12, 'center');\r\n        doc.text('Especialidades Dermatológicas', pageWidth / 2, 16, 'center');\r\n        doc.setLineWidth(0.5);\r\n        doc.line(8, 20, 140, 20);\r\n        let venta = ventaImprimir.venta[0].prod\r\n        let tabla = []\r\n        let x = 30\r\n        let sumaTotal = 0\r\n\r\n        await venta.map(function (num) {\r\n            sumaTotal = sumaTotal + parseFloat(num.precio)\r\n\r\n            let producto = [num.producto, num.cantidad, num.tipoProducto, \"$\"+parseFloat(num.precio).toFixed(2)]\r\n\r\n            tabla.push(Object.assign({}, producto));\r\n            x = x + 10;\r\n            return tabla\r\n\r\n        });\r\n        tabla.push(Object.assign({}, [\"\",\"\",\"TOTAL\",\"$\"+parseFloat(sumaTotal).toFixed(2)]));\r\n\r\n        doc.autoTable({\r\n            head: [['Nombre', 'Cantidad', 'Tipo', 'Precio']],\r\n            startY: 22,\r\n            body: tabla,\r\n            theme:\"grid\",\r\n            styles: {\r\n                fontSize: 6,\r\n                halign: 'center',\r\n                cellPadding: 1\r\n\r\n            },\r\n        })\r\n\r\n\r\n        console.log(doc.internal.pageSize.getHeight())\r\n        doc.setFontSize(10)\r\n        doc.text('Firma Recibido', pageWidth / 2, 98, 'center');\r\n        doc.line(8, 100, 140, 100);\r\n        doc.autoPrint({variant: 'non-conform'});\r\n        doc.save(id+'.pdf');\r\n\r\n    }\r\n\r\n    async nextDay() {\r\n        let dia = parseInt(this.state.dia)\r\n        let mes = parseInt(this.state.mes)\r\n        let anio = this.state.anio\r\n        let diaN, mesN\r\n        console.log(dia)\r\n        if (dia === 31) {\r\n            dia = 1\r\n            if (mes === 12) {\r\n                anio = anio + 1\r\n                mes = 1\r\n            } else {\r\n                mes = mes + 1\r\n            }\r\n        } else {\r\n            dia = dia + 1\r\n        }\r\n        // console.log(\"NEXT DAY\")\r\n        // console.log(dia)\r\n        // console.log(mes)\r\n        // console.log(anio)\r\n        if (mes < 10) {\r\n            mesN = \"0\" + mes.toString()\r\n        } else {\r\n            mesN = mes\r\n        }\r\n\r\n        if (dia < 10) {\r\n            diaN = \"0\" + dia.toString()\r\n        } else {\r\n            diaN = dia\r\n        }\r\n        console.log(\"MODIFICADO\")\r\n        console.log(diaN)\r\n        console.log(mesN)\r\n        console.log(anio)\r\n        await this.setState({\r\n            dia: diaN,\r\n            mes: mesN,\r\n            anio: anio\r\n        });\r\n        this.getAllVentasDiarias()\r\n\r\n    }\r\n\r\n    async previousDay() {\r\n        let dia = parseInt(this.state.dia)\r\n        let mes = parseInt(this.state.mes)\r\n        let anio = this.state.anio\r\n        let diaN, mesN\r\n        console.log(dia)\r\n        if (dia === 1) {\r\n            dia = 31\r\n            if (mes === 1) {\r\n                anio = anio - 1\r\n                mes = 12\r\n            } else {\r\n                mes = mes - 1\r\n            }\r\n        } else {\r\n            dia = dia - 1\r\n        }\r\n        if (mes < 10) {\r\n            mesN = \"0\" + mes.toString()\r\n        } else {\r\n            mesN = mes\r\n        }\r\n\r\n        if (dia < 10) {\r\n            diaN = \"0\" + dia.toString()\r\n        } else {\r\n            diaN = dia\r\n        }\r\n        console.log(\"MODIFICADO\")\r\n        console.log(diaN)\r\n        console.log(mesN)\r\n        console.log(anio)\r\n        await this.setState({\r\n            dia: diaN,\r\n            mes: mesN,\r\n            anio: anio\r\n        });\r\n        this.getAllVentasDiarias()\r\n\r\n    }\r\n\r\n    async getAllVentasDiarias() {\r\n         let notes = {}\r\n        let ventasD=db.ref().child(\"VENTAS\")\r\n        await ventasD.on('value',(snapshot)=>{\r\n            let mes = this.state.mes\r\n            let dia = this.state.dia\r\n            let anio = this.state.anio\r\n            let formatoId = anio.toString() + \"-\" + mes + \"-\" + dia;\r\n            // console.log(formatoId)\r\n            // let allNotes = await dbVentas.allDocs({ include_docs: true });\r\n            let ventasDiarias = []\r\n         \r\n            var array =[]\r\n            let data=snapshot.val()\r\n            array=Object.values(data)\r\n            console.log(array)\r\n            console.log(array)\r\n            array.map((ventaDiaria) => {\r\n                let string = ventaDiaria._id.substring(0, 10);\r\n                if (string === formatoId) {\r\n                    console.log(\"ES IGUAL\");\r\n                    ventasDiarias.push(ventaDiaria);\r\n                    console.log(ventasDiarias)\r\n                }\r\n                else {\r\n                    console.log(\"NO ES IGUAL\");\r\n                }\r\n            })\r\n            let sumaTotal = 0\r\n            let sumaTarjeta = 0\r\n            let sumaEfectivo = 0\r\n            let totalProductos = 0\r\n            let totalConsulta = 0\r\n            let totalProcedimientos = 0\r\n            let totalMedicamentos = 0\r\n    \r\n            ventasDiarias.map((venta) => {\r\n                sumaTotal = sumaTotal + parseFloat(venta.venta[0].total)\r\n                sumaEfectivo = sumaEfectivo + parseFloat(venta.venta[0].tipoPago.efectivo)\r\n                sumaTarjeta = sumaTarjeta + parseFloat(venta.venta[0].tipoPago.tarjeta.monto)\r\n                venta.venta[0].prod.map((producto) => {\r\n    \r\n                    if (producto.tipoProducto === \"Procedimiento\") {\r\n                        totalProcedimientos = totalProcedimientos + 1\r\n                    }\r\n                    if (producto.tipoProducto === \"Consulta\") {\r\n                        totalConsulta = totalConsulta + 1\r\n                    }\r\n                    if (producto.tipoProducto === \"Medicamento\") {\r\n                        totalMedicamentos = totalMedicamentos + 1\r\n                    }\r\n                })\r\n                totalProductos = totalConsulta + totalProcedimientos + totalMedicamentos\r\n    \r\n            })\r\n    \r\n    \r\n            this.setState({\r\n                totalTarjeta: sumaTarjeta,\r\n                totalEfectivo: sumaEfectivo,\r\n                totalProducto: totalProductos,\r\n                totalConsultas: totalConsulta,\r\n                totalProcedimientos: totalProcedimientos,\r\n                totalMedicamentos: totalMedicamentos,\r\n                sumaTotal: sumaTotal,\r\n                ventasDiarias: ventasDiarias\r\n            });\r\n    \r\n    \r\n            console.log(this.state.totalTarjeta)\r\n        })\r\n      \r\n\r\n        return notes;\r\n    };\r\n\r\n    async getAllenventa() {\r\n\r\n        let enVenta=db.ref().child(\"enVenta\")\r\n        enVenta.on('value', (snapshot) =>{\r\n            if(snapshot.val()==null){\r\n                this.setState({\r\n                    suma: 0,\r\n                    enventa: [],\r\n                    disabled: false,\r\n                    autofocus: true\r\n                });\r\n\r\n\r\n            }\r\n            else{\r\n                let data = snapshot.val();\r\n                let array=Object.values(data)\r\n                let suma = 0\r\n    \r\n        \r\n                array.map((sale) => {\r\n                    suma = suma + parseFloat(sale.precio)\r\n                })\r\n                console.log(\"ESTE \")\r\n                this.setState({\r\n                    suma: suma.toFixed(2),\r\n                    enventa: array.reverse(),\r\n                    disabled: false,\r\n                    autofocus: true\r\n                });\r\n\r\n\r\n\r\n            }\r\n\r\n          });\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    async pagar() {\r\n        this.setState({\r\n            showMetodoPago: true\r\n        });\r\n\r\n    };\r\n\r\n    async handleEfectivo() {\r\n        this.setState({\r\n            showMetodoPago: false,\r\n            inputSell: \"\"\r\n        });\r\n\r\n        let sumaF = this.state.suma\r\n\r\n        // let mes=this.state.mes\r\n        // let dia=this.state.dia\r\n        // let anio=this.state.anio\r\n\r\n\r\n        let dt = new Date();\r\n        let anio = (dt.getFullYear())\r\n        let mesN = (dt.getMonth()) + 1\r\n        console.log(mesN)\r\n\r\n        let mes;\r\n        if (mesN < 10) {\r\n            mes = \"0\" + mesN.toString()\r\n        } else {\r\n            mes = mesN\r\n        }\r\n        let diaN = (dt.getDate())\r\n        let dia;\r\n        if (diaN < 10) {\r\n            dia = \"0\" + diaN.toString()\r\n        } else {\r\n            dia = diaN\r\n        }\r\n        let enventa = this.state.enventa;\r\n        let formatoId = anio.toString() + \"-\" + mes + \"-\" + dia;\r\n        let folio = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8)\r\n\r\n\r\n\r\n        let prod = [{ total: sumaF, folio: folio, tipoPago: { efectivo: sumaF, tarjeta: { monto: 0, folio: \"AAA\" } }, prod: enventa }]\r\n        let ventaUnica = { _id: formatoId + \"-\" + folio, anio: anio, mes: mes, dia: dia, total: 0, venta: prod }\r\n        // dbVentas.put(ventaUnica, function callback(err, result) {\r\n        //     if (!err) {\r\n        //         console.log('Successfully added new date with sale!');\r\n        //     }\r\n\r\n        // });\r\n\r\n        // AGREGA VENTA A FIREBASE \r\n        db.ref().child(\"VENTAS\").child(ventaUnica._id).set(ventaUnica)\r\n        // ELIMINA REGISTRO DE ENVENTA \r\n        db.ref().child(\"enVenta\").remove()\r\n\r\n\r\n        // dbenventa.destroy().then(function (response) {\r\n        //     console.log(\"BORRADA\")\r\n        // }).catch(function (err) {\r\n        //     console.log(err);\r\n        // });\r\n\r\n        // this.componentDidMount();\r\n        // window.location.reload();\r\n    };\r\n\r\n\r\n    handleTarjeta = event => {\r\n        this.setState({\r\n            showMetodoPago: false,\r\n            inputSell: \"\",\r\n            showFolio: true\r\n        });\r\n    };\r\n\r\n\r\n    async handleAceptarCont() {\r\n\r\n        // console.log(this.state.password)\r\n        if (this.state.password === \"12345\") {\r\n\r\n\r\n            db.ref().child(\"VENTAS\").child(this.state.idBorrar).remove()\r\n\r\n            this.setState({\r\n                showPass: false,\r\n                password: \"\"\r\n            });\r\n            this.getAllVentasDiarias()\r\n\r\n        } else {\r\n            this.setState({\r\n                errorPass: true,\r\n                helperPass: \"CONTRASEÑA EQUIVOCADA\"\r\n            });\r\n            // alert(\"CONTRASÑEA EQUIVOCADA\")\r\n            this.getAllVentasDiarias()\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    async agregarVenta(productoAgregar) {\r\n        this.setState({\r\n            adding:  false\r\n        });\r\n\r\n        if (this.state.adding === false) {\r\n            console.log(\"Agregando esperar\")\r\n        }\r\n        else {\r\n            console.log(this.state.adding)\r\n            let prodAct = productoAgregar;\r\n            prodAct.cantidad = prodAct.cantidad - 1;\r\n            let agregarVenta = {\r\n                _id: new Date().toISOString().split('.').join(''),\r\n                idInv: productoAgregar.id,\r\n                // revInv: productoAgregar._rev,\r\n                producto: productoAgregar.nombre,\r\n                codigo: productoAgregar.id,\r\n                cantidad: 1,\r\n                tipoProducto: productoAgregar.tipoProducto,\r\n                precio: productoAgregar.precio,\r\n                cerrado: false,\r\n                // venta: this.state.folios[0].venta,\r\n                // diacierre: this.state.folios[0].diacierre,\r\n                // anio: this.state.folios[0].anioCierre\r\n            }\r\n            // await dbenventa.put(agregarVenta, function callback(err, result) {\r\n            //     if (!err) {\r\n            //         console.log('Successfully posted a todo!');\r\n            //     }\r\n            // });\r\n            // QUITA LOS PUNTOS DEL ID\r\n            let idN=agregarVenta._id\r\n            \r\n            // console.log(idN)\r\n\r\n            await db.ref().child(\"enVenta\").child(idN).set(agregarVenta)\r\n            await db.ref().child(\"INVENTARIO\").child(productoAgregar.id).set(productoAgregar)\r\n\r\n            // await dbinventario.put(prodAct);\r\n            this.setState({\r\n                adding:  true\r\n            });\r\n  \r\n        }\r\n\r\n\r\n    };\r\n\r\n    async handleAceptarFolio() {\r\n        this.setState({\r\n            showFolio: false,\r\n            inputSell: \"\"\r\n        });\r\n\r\n        let sumaF = this.state.suma\r\n        let folio = this.state.folio\r\n\r\n\r\n        let dt = new Date();\r\n        let anio = (dt.getFullYear())\r\n        let mesN = (dt.getMonth()) + 1\r\n        let mes;\r\n        if (mesN < 10) {\r\n            mes = \"0\" + mesN.toString()\r\n        } else {\r\n            mes = mesN\r\n        }\r\n        let diaN = (dt.getDate())\r\n        let dia;\r\n        if (diaN < 10) {\r\n            dia = \"0\" + diaN.toString()\r\n        } else {\r\n            dia = diaN\r\n        }\r\n        let enventa = this.state.enventa;\r\n        let formatoId = anio.toString() + \"-\" + mes + \"-\" + dia;\r\n        console.log(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8))\r\n        let folioV = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8)\r\n\r\n        let prod = [{ total: sumaF, folio: folioV, tipoPago: { efectivo: 0, tarjeta: { monto: sumaF, folio: folio } }, prod: enventa }]\r\n        let ventaUnica = { _id: formatoId + \"-\" + folioV, anio: anio, mes: mes, dia: dia, total: 0, venta: prod }\r\n        // dbVentas.put(ventaUnica, function callback(err, result) {\r\n        //     if (!err) {\r\n        //         console.log('Successfully posted a todo!');\r\n        //     }\r\n\r\n        // });\r\n\r\n        db.ref().child(\"VENTAS\").child(ventaUnica._id).set(ventaUnica)\r\n\r\n        db.ref().child(\"enVenta\").remove()\r\n\r\n        // this.componentDidMount();\r\n        // window.location.reload();\r\n\r\n\r\n    }\r\n\r\n\r\n    handleClose = event => {\r\n        this.setState({\r\n            show: false,\r\n            inputSell: \"\"\r\n        });\r\n    };\r\n\r\n    handleCloseFolio = event => {\r\n        this.setState({\r\n            showFolio: false,\r\n            inputSell: \"\",\r\n            folio: \"\"\r\n        });\r\n        console.log(this.state.folio)\r\n    };\r\n\r\n    handleClosePass = event => {\r\n        this.setState({\r\n            showPass: false,\r\n            inputSell: \"\"\r\n        });\r\n        console.log(this.state.folio)\r\n    };\r\n\r\n\r\n\r\n    handleCloseMetodoPago = event => {\r\n        this.setState({\r\n            showMetodoPago: false\r\n        });\r\n    };\r\n\r\n    handleNuevo = event => {\r\n        this.setState({\r\n            show: false,\r\n            inputSell: \"\"\r\n        });\r\n        console.log(\"AGREGAR A INVENTARIO\")\r\n    };\r\n\r\n    handleShow() {\r\n        this.setState({\r\n            show: true\r\n        });\r\n    };\r\n\r\n    async handleDel(a, producto) {\r\n        // console.log(producto)\r\n        // let inventario = this.state.inventario\r\n        // let prod\r\n        // await dbenventa.remove(producto._id, producto._rev, function callback(err, result) {\r\n        //     if (!err) {\r\n        //         console.log('Successfully deleted a todo!');\r\n        //     } else {\r\n        //         console.log(\"ERR1\")\r\n        //     }\r\n        // });\r\n        db.ref().child(\"enVenta\").child(producto._id).remove()\r\n        let sumar1=db.ref().child(\"INVENTARIO\").child(producto.idInv)\r\n        sumar1.once('value',(snapshot)=>{\r\n            let cantidad=snapshot.val().cantidad +1\r\n            db.ref().child(\"INVENTARIO\").child(producto.idInv).update({cantidad:cantidad})\r\n        })\r\n        // console.log(sumar1.val())\r\n        // sumar1.cantidad=sumar1.cantidad+1\r\n        // console.log(db.ref().child(\"INVENTARIO\").child(producto.idInv))\r\n\r\n        \r\n        // await inventario.some(function (elemento) {\r\n        //     if (elemento._id == producto.idInv) {\r\n        //         console.log(elemento)\r\n        //         elemento.cantidad = elemento.cantidad + 1;\r\n        //         prod = elemento;\r\n        //         return 0\r\n\r\n        //     }\r\n        // });\r\n        // await dbinventario.put(prod, function callback(err, result) {\r\n        //     if (!err) {\r\n        //         console.log('Successfully updated inventario +1!');\r\n        //     } else { console.log(\"ERR3\") }\r\n        // });\r\n\r\n        // console.log(sumproduct)     \r\n        // this.componentDidMount();\r\n\r\n        // window.location.reload();\r\n    };\r\n\r\n\r\n    _onKeyPress(event) {\r\n\r\n\r\n        if (event.charCode === 13) { // enter key pressed\r\n            // this.setState({\r\n            //     disabled: true\r\n            // });\r\n            let inventario = this.state.inventario;\r\n            let productoKey = this.state.inputSell;\r\n            let existe = false;\r\n            let productoAgregar = \"\";\r\n\r\n            for (let i = 0; i < inventario.length; i++) {\r\n                // console.log(inventario)\r\n                //REVISA SI EXISTE\r\n                if (inventario[i].id === productoKey) {\r\n                    productoAgregar = inventario[i];\r\n                    existe = true;\r\n                    // console.log(productoAgregar)\r\n                }\r\n            }\r\n            if (existe) {\r\n                //REVISA HAY EN INVENTARIO\r\n                // console.log(productoAgregar);\r\n                if (productoAgregar.cantidad <= 0) {\r\n                    this.handleShow();\r\n                    console.log(\"NO TIENE PRODUCTO EN INVENTARIO\")\r\n\r\n                }\r\n                //SI EXSISTE Y HAY EN INVENTARIO\r\n                else {\r\n                    this.agregarVenta(productoAgregar);\r\n                }\r\n\r\n            } else {\r\n                console.log(\"NO EXISTE\");\r\n            }\r\n            this.setState({\r\n                inputSell: \"\"\r\n            });\r\n\r\n            this.componentDidMount()\r\n        }\r\n\r\n    }\r\n\r\n    _onChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n\r\n            <Grid container style={{ backgroundColor: '#dddddd' }} >\r\n\r\n\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd' }}  ></Grid>\r\n                <Grid item xs={6}>\r\n                    {/* <Grid textAlign={'center'} xs={2} container style={{ backgroundColor: '#dddddd', height: '100vh' }} > </Grid> */}\r\n                    <Grid style={{ backgroundColor: '#dddddd', height: '100%' }} >\r\n\r\n                        <FormControl fullWidth noValidate autoComplete=\"off\">\r\n                            <TextField autoFocus={this.state.autofocus} name={\"inputSell\"} onChange={this._onChange} onKeyPress={this._onKeyPress} id=\"outlined-basic\" disabled={false} variant=\"outlined\" value={this.state.inputSell} style={{ width: \"100%\", marginTop: \"50px\" }} />\r\n                            <List>\r\n\r\n                                <Paper style={{ overflow: 'auto', height: '55vh', marginTop: \"30px\" }}>\r\n\r\n                                    <div >\r\n\r\n                                        <Table stickyHeader aria-label=\"sticky table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"right\">#</TableCell>\r\n                                                    <TableCell align=\"right\">Cantidad</TableCell>\r\n                                                    <TableCell align=\"right\">Producto</TableCell>\r\n                                                    <TableCell align=\"right\">Precio</TableCell>\r\n                                                    <TableCell align=\"right\">Total</TableCell>\r\n                                                    <TableCell align=\"right\">Cancelar</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n\r\n                                                {this.state.enventa.map((producto, index, key) => {\r\n\r\n\r\n                                                    return (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"right\">{index + 1}</TableCell>\r\n                                                            <TableCell align=\"right\">{producto.cantidad}</TableCell>\r\n                                                            <TableCell align=\"right\">{producto.producto}<br /></TableCell>\r\n                                                            <TableCell align=\"right\">${producto.precio}</TableCell>\r\n                                                            <TableCell align=\"right\">${producto.precio * producto.cantidad}</TableCell>\r\n                                                            <TableCell align=\"right\"><button onClick={(e) => { this.handleDel(e, producto) }}>Eiminar</button></TableCell>\r\n\r\n                                                        </TableRow>\r\n\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </Paper>\r\n\r\n                            </List>\r\n\r\n                        </FormControl>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd', height: '100vh' }}></Grid>\r\n                <Grid item xs={4}>\r\n\r\n\r\n                    <Grid style={{ backgroundColor: '#888888', height: '100%' }}>\r\n\r\n                        <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", flexDirection: \"column\", textAlign: \"center\", left: \"50%\", height: '20%', backgroundColor: '#ffffff' }} >\r\n                            <Typography variant=\"h3\"> TOTAL</Typography>\r\n                            <Typography variant=\"h3\">{formatter.format(this.state.suma)}</Typography>\r\n                            <ButtonGroup fullWidth color=\"primary\" aria-label=\"full width outlined button group\">\r\n\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={(e) => { this.pagar() }}>Pagar</Button >\r\n                            </ButtonGroup>\r\n\r\n                        </Grid>\r\n                        <Paper style={{ textAlign: \"center\", marginBotton: \"auto\", marginTop: \"10px\", marginRight: \"auto\", marginLeft: \"auto\" }}>\r\n\r\n\r\n                            <Typography>\r\n                                <SkipPreviousIcon onClick={(e) => this.previousDay()}></SkipPreviousIcon>{this.state.dia}/{this.state.mes}/{this.state.anio}\r\n                                <SkipNextIcon onClick={(e) => this.nextDay()}></SkipNextIcon></Typography>\r\n\r\n\r\n\r\n                        </Paper>\r\n                        <Grid container style={{ height: '50%', backgroundColor: '#888888' }} >\r\n\r\n                            <Grid container style={{ height: '80%', backgroundColor: '#888888' }} >\r\n\r\n                                <Paper style={{ width: \"90%\", height: \"250px\", marginRight: \"auto\", marginLeft: \"auto\", overflow: 'auto', marginTop: \"30px\" }}>\r\n                                    <div >\r\n                                        {/* <AutoSizer>  {({ height, width }) => ( */}\r\n                                        <Table padding=\"none\" stickyHeader aria-label=\"sticky table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\">#</TableCell>\r\n                                                    <TableCell align=\"center\">Folio</TableCell>\r\n                                                    <TableCell align=\"center\">Productos </TableCell>\r\n                                                    <TableCell align=\"center\">Efectivo</TableCell>\r\n                                                    <TableCell align=\"center\">Tarjeta</TableCell>\r\n                                                    <TableCell align=\"center\">Total</TableCell>\r\n                                                    <TableCell align=\"center\">Imp</TableCell>\r\n                                                    <TableCell align=\"center\">Eliminar</TableCell>\r\n                                                    {/* <TableCell align=\"right\">Detalle</TableCell> */}\r\n                                                    {/* <TableCell align=\"right\">Ver</TableCell> */}\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n\r\n                                                {this.state.ventasDiarias.map((venta, index, key) => {\r\n\r\n\r\n                                                    return (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                                            <TableCell align=\"center\">{venta.venta[0].folio}</TableCell>\r\n                                                            <TableCell align=\"center\">{venta.venta[0].prod.length}<br /></TableCell>\r\n                                                            <TableCell align=\"center\">${venta.venta[0].tipoPago.efectivo}</TableCell>\r\n                                                            <TableCell align=\"center\">${venta.venta[0].tipoPago.tarjeta.monto}</TableCell>\r\n                                                            <TableCell align=\"center\">${venta.venta[0].total}</TableCell>\r\n                                                            <TableCell align=\"center\"><PrintIcon onClick={(e) => { this.imprimir(venta._id) }} /></TableCell>\r\n                                                            <TableCell align=\"center\"><HighlightOffIcon onClick={(e) => { this.borrarVenta(venta._id) }} /></TableCell>\r\n                                                            {/* <TableCell align=\"right\"><button onClick={(e) => {console.log(venta.venta[0].folio) }}>Detalle</button></TableCell> */}\r\n\r\n                                                        </TableRow>\r\n\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                        {/* )} */}\r\n                                        {/* </AutoSizer> */}\r\n                                    </div>\r\n\r\n\r\n                                </Paper>\r\n\r\n                                <Grid container style={{ backgroundColor: '#888888' }} >\r\n\r\n\r\n\r\n\r\n\r\n                                    <Paper style={{ marginRight: \"auto\", marginLeft: \"auto\", overflow: 'auto', width: \"90%\", marginTop: \"5px\" }}>\r\n\r\n\r\n\r\n                                        <p>Efectivo ${this.state.totalEfectivo}   Tarjeta ${this.state.totalTarjeta}</p>\r\n                                        <p>Total Venta del Día ${this.state.sumaTotal} </p>\r\n\r\n                                        <p>Medicamentos {this.state.totalMedicamentos}  Consultas {this.state.totalConsultas}  Procedimiento {this.state.totalProcedimientos}</p>\r\n\r\n                                        <p>Total de Productos: {this.state.totalProducto}</p>\r\n\r\n                                    </Paper>\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Dialog\r\n                    open={this.state.show}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"No hay disponible en inventario\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            ¿Desea agregar 1 producto de este artículo al inventario?\r\n          </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleNuevo} color=\"primary\">\r\n                            Si\r\n          </Button>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                            No\r\n          </Button>\r\n\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.showMetodoPago}\r\n                    onClose={this.handleCloseMetodoPago}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Seleccione el Tipo de Pago\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            ¿Tipo de Pago?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleEfectivo} color=\"primary\">\r\n                            Efectivo\r\n                        </Button>\r\n                        <Button onClick={this.handleTarjeta} color=\"primary\" autoFocus>\r\n                            Tarjeta\r\n                        </Button>\r\n                        <Button onClick={this.handleCloseMetodoPago} color=\"primary\" autoFocus>\r\n                            Cancelar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.showFolio}\r\n                    onClose={this.handleCloseFolio}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Escriba Folio de Boucher de Venta\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            error={this.state.errorProducto}\r\n                            helperText={this.state.helperProducto}\r\n                            disabled={this.state.edit}\r\n                            label=\"Folio de Ticket\"\r\n                            name={\"folio\"}\r\n                            onChange={this._onChange}\r\n                            variant=\"outlined\"\r\n                            value={this.state.folio}\r\n                            style={{ width: \"90%\", marginTop: \"50px\" }} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleAceptarFolio} color=\"primary\" autoFocus>\r\n                            Aceptar\r\n                        </Button>\r\n                        <Button onClick={this.handleCloseFolio} color=\"primary\" autoFocus>\r\n                            Cancelar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.showPass}\r\n                    onClose={this.handleClosePass}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Escriba Contraseña para Borrar Venta\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            error={this.state.errorPass}\r\n                            helperText={this.state.helperPass}\r\n                            type=\"password\"\r\n                            // disabled={this.state.edit}\r\n                            label=\"Contraseña\"\r\n                            name={\"password\"}\r\n                            onChange={this._onChange}\r\n                            variant=\"outlined\"\r\n                            value={this.state.password}\r\n                            style={{ width: \"90%\", marginTop: \"50px\" }} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleAceptarCont} color=\"primary\" autoFocus>\r\n                            Aceptar\r\n                        </Button>\r\n                        <Button onClick={this.handleClosePass} color=\"primary\" autoFocus>\r\n                            Cancelar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Venta;","import React from 'react';\r\nimport '../styles/BarraDerecha.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport List from '@material-ui/core/List';\r\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import { fontSize } from '@material-ui/system';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Container from '@material-ui/core/Container';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Input from '@material-ui/core/Input';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable'\r\nvar PouchDB = require('pouchdb').default;\r\nvar dbinventario = new PouchDB('http://localhost:5984/inventario');\r\nvar dbVentas = new PouchDB('http://localhost:5984/ventas');\r\nvar dbConfig = new PouchDB('http://localhost:5984/config');\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Configuracion extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inventario: [],\r\n            ventas: [],\r\n            config: [],\r\n            seleccion: \"\",\r\n            passAnterior: \"\",\r\n            passNuevo: \"\",\r\n            passConfirmar: \"\",\r\n            helperPass: \"\",\r\n            errorPass: false,\r\n            helperNuevoPass: \"\",\r\n            errorNuevoPAss: false,\r\n            helperConfirmar: \"\",\r\n            errorConfirmar: false,\r\n            procesado: []\r\n\r\n\r\n        };\r\n\r\n        this._onChange = this._onChange.bind(this);\r\n        this.getAllinventario = this.getAllinventario.bind(this);\r\n        this.getAllVentas = this.getAllVentas.bind(this);\r\n        this.getAllConfig = this.getAllConfig.bind(this);\r\n        this.password = this.password.bind(this);\r\n        this.corregirDias = this.corregirDias.bind(this);\r\n        this.cambiarPAssword = this.cambiarPAssword.bind(this);\r\n        this.actualizarTabla = this.actualizarTabla.bind(this);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n\r\n        await this.getAllinventario().then(data => {\r\n            let array = Object.values(data);\r\n            this.setState({\r\n                inventario: array\r\n            });\r\n\r\n        })\r\n\r\n        await this.getAllVentas().then(data => {\r\n            let array = Object.values(data);\r\n            this.setState({\r\n                ventas: array\r\n            });\r\n\r\n        })\r\n\r\n        await this.getAllConfig().then(data => {\r\n            let array = Object.values(data);\r\n            this.setState({\r\n                config: array\r\n            });\r\n            if (this.state.config.length === 0) {\r\n\r\n                let ventaUnica = { _id: \"Password\", eliminar: \"clinica826\" }\r\n                dbConfig.put(ventaUnica, function callback(err, result) {\r\n                    if (!err) {\r\n                        console.log('Successfully added new date with sale!');\r\n                    }\r\n\r\n                });\r\n                console.log(\"ESTA VACIO EL CONFIG\")\r\n            }\r\n            else {\r\n                // console.log(this.state.config)\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async getAllVentas() {\r\n        let allNotes = await dbVentas.allDocs({ include_docs: true });\r\n        let notes = {}\r\n        allNotes.rows.forEach(n => notes[n.id] = n.doc);\r\n        // console.log(notes)\r\n        return notes;\r\n\r\n    };\r\n\r\n    async getAllinventario() {\r\n        let allNotes = await dbinventario.allDocs({ include_docs: true });\r\n        let notes = {}\r\n        allNotes.rows.forEach(n => notes[n.id] = n.doc);\r\n        // console.log(notes)\r\n        return notes;\r\n    };\r\n\r\n    async getAllConfig() {\r\n        let allNotes = await dbConfig.allDocs({ include_docs: true });\r\n        let notes = {}\r\n        allNotes.rows.forEach(n => notes[n.id] = n.doc);\r\n        // console.log(notes)\r\n        return notes;\r\n    };\r\n\r\n    async password() {\r\n        console.log(this.state.config)\r\n        this.setState({\r\n            seleccion: \"password\"\r\n        })\r\n    };\r\n\r\n\r\n    async corregirDias() {\r\n\r\n\r\n        let tablaProcesado = []\r\n        this.setState({\r\n            seleccion: \"corregirDias\"\r\n        })\r\n        let request = this.state.ventas\r\n        let used = []\r\n\r\n        \r\n\r\n\r\n        await request.map(function (obj) {\r\n            let stringF = obj._id\r\n            if (stringF.substring(8, 17) === \"undefined\") {\r\n                used.push(obj)\r\n            }\r\n\r\n\r\n\r\n        });\r\n        await used.map(function (obj) {\r\n\r\n            let newId = obj._id.substring(0, 8) + obj.venta[0].prod[0]._id.substring(8, 10) + obj._id.substring(17, 25)\r\n\r\n            let newO = {\r\n                _id: newId,\r\n                anio: obj.anio,\r\n                mes: obj.mes,\r\n                dia: obj.venta[0].prod[0]._id.substring(8, 10),\r\n                total: obj.total,\r\n                venta: obj.venta\r\n            }\r\n\r\n            dbVentas.put(newO, function callback(err, result) {\r\n                if (!err) {\r\n                    let procesado = {\r\n                        _id: obj._id,\r\n                        anio: obj.anio,\r\n                        mes: obj.mes,\r\n                        dia: \"\",\r\n                        diaCorregido: obj.venta[0].prod[0]._id.substring(8, 10),\r\n                        idCorregido: newId,\r\n                        status: \"CORREGIDO\"\r\n                    }\r\n\r\n                    tablaProcesado.push(Object.assign({}, procesado));\r\n                } else {\r\n                    let procesado = {\r\n                        _id: obj._id,\r\n                        anio: obj.anio,\r\n                        mes: obj.mes,\r\n                        dia: \"\",\r\n                        diaCorregido: obj.venta[0].prod[0]._id.substring(8, 10),\r\n                        idCorregido: newId,\r\n                        status: \"Anteriormente Corregido\"\r\n                    }\r\n                    tablaProcesado.push(Object.assign({}, procesado));\r\n                  \r\n                }\r\n\r\n       \r\n\r\n\r\n\r\n            });\r\n            \r\n            return 0\r\n            \r\n        });\r\n        this.actualizarTabla(tablaProcesado);\r\n\r\n    \r\n\r\n    };\r\n\r\nasync actualizarTabla (){\r\n\r\n    \r\n    // this.setState({\r\n    //     procesado: tabla\r\n    // })\r\n}\r\n\r\n\r\n    async cambiarPAssword() {\r\n        let config = this.state.config\r\n        let password = \"\"\r\n\r\n        config.map(function (ok) {\r\n            if (ok._id === \"Password\") {\r\n                password = ok\r\n\r\n            }\r\n            return 0\r\n        })\r\n        console.log(password)\r\n\r\n        if (this.state.passAnterior != password.eliminar) {\r\n            this.setState({\r\n                helperPass: \"Contraseña Incorrecta\",\r\n                errorPass: true\r\n            })\r\n\r\n        } else if (this.state.passNuevo != this.state.passConfirmar) {\r\n\r\n            this.setState({\r\n                helperPass: \"\",\r\n                errorPass: false,\r\n                helperConfirmar: \"No coinciden contraseñas\",\r\n                errorConfirmar: true,\r\n                errorNuevoPAss: true\r\n\r\n            })\r\n\r\n\r\n\r\n        } else {\r\n            password.eliminar = this.state.passNuevo\r\n\r\n            await dbConfig.put(password);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    _onChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let componente = <p>Inicio</p>\r\n        let texto = \"\"\r\n\r\n        if (this.state.seleccion === \"\") {\r\n            componente = <p>INICIADA LA PAGINA</p>\r\n\r\n        } else if (this.state.seleccion === \"password\") {\r\n            texto = <p style={{ textAlign: \"center\" }}>  Cambiar Contraseña</p>\r\n            componente = <FormControl fullWidth noValidate autoComplete=\"off\">\r\n\r\n\r\n                <TextField\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    placeholder=\"Teclea Contraseña Actual\"\r\n                    name={\"passAnterior\"}\r\n                    onChange={this._onChange}\r\n                    id=\"outlined-basic\" variant=\"outlined\"\r\n                    value={this.state.passAnterior}\r\n                    style={{ width: \"90%\", marginTop: \"10px\", marginLeft: \"20px\" }}\r\n                    label=\"Password Anterior\"\r\n                    size=\"small\"\r\n                    helperText={this.state.helperPass}\r\n                    error={this.state.helperPass}\r\n                    type=\"password\"\r\n\r\n                />\r\n\r\n                <TextField\r\n                    // className={useStyles.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    placeholder=\"Introduce Nueva Contraseña\"\r\n                    name={\"passNuevo\"}\r\n                    onChange={this._onChange}\r\n                    // onKeyPress={this._onKeyPress}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.passNuevo}\r\n                    style={{ width: \"90%\", marginTop: \"40px\", marginLeft: \"20px\" }}\r\n                    label=\"Password Nuevo\"\r\n                    size=\"small\"\r\n                    helperText={this.state.helperNuevoPass}\r\n                    error={this.state.errorNuevoPAss}\r\n                    type=\"password\"\r\n\r\n                />\r\n\r\n                <TextField\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    placeholder=\"Confirma Nueva Contraseña\"\r\n                    name={\"passConfirmar\"}\r\n                    onChange={this._onChange}\r\n                    // onKeyPress={this._onKeyPress}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.passConfirmar}\r\n                    style={{ width: \"90%\", marginTop: \"20px\", marginLeft: \"20px\", marginBottom: \"20px\" }}\r\n                    label=\"Confirmar Nuevo Password\"\r\n                    size=\"small\"\r\n                    helperText={this.state.helperConfirmar}\r\n                    error={this.state.errorConfirmar}\r\n                    type=\"password\"\r\n                />\r\n\r\n\r\n                <ButtonGroup orientation=\"vertical\" size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\" fullWidth>\r\n                    <Button style={{ marginTop: '5px' }} variant=\"contained\" color=\"primary\" onClick={(e) => this.cambiarPAssword()}>Cambiar Contraseña</Button >\r\n\r\n                </ButtonGroup>\r\n            </FormControl>\r\n\r\n        } else if (this.state.seleccion == \"corregirDias\") {\r\n            componente = <Paper style={{ width: \"90%\", height: \"250px\", marginRight: \"auto\", marginLeft: \"auto\", overflow: 'auto', marginTop: \"30px\" }}>\r\n                <div >\r\n                    {/* <AutoSizer>  {({ height, width }) => ( */}\r\n                    <Table padding=\"none\" stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">ID ORIGINAL</TableCell>\r\n                                <TableCell align=\"center\">Año </TableCell>\r\n                                <TableCell align=\"center\">Mes</TableCell>\r\n                                <TableCell align=\"center\">Dia</TableCell>\r\n                                <TableCell align=\"center\">ID CORREGIDO</TableCell>\r\n                                <TableCell align=\"center\">ID CORREGIDO</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                {/* <TableCell align=\"right\">Detalle</TableCell> */}\r\n                                {/* <TableCell align=\"right\">Ver</TableCell> */}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n                            {this.state.procesado.map((procesado, index, key) => {\r\n                                {console.log(procesado)}\r\n\r\n                                return (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{procesado._id}</TableCell>\r\n                                        <TableCell align=\"center\">{procesado.anio}<br /></TableCell>\r\n                                        <TableCell align=\"center\">{procesado.mes}</TableCell>\r\n                                        <TableCell align=\"center\">{procesado.dia}</TableCell>\r\n                                        <TableCell align=\"center\">{procesado.diaCorregido}</TableCell>\r\n                                        <TableCell align=\"center\">{procesado.status}</TableCell>\r\n\r\n                                        {/* <TableCell align=\"right\"><button onClick={(e) => {console.log(venta.venta[0].folio) }}>Detalle</button></TableCell> */}\r\n\r\n                                    </TableRow>\r\n\r\n                                )\r\n                            })}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                    {/* )} */}\r\n                    {/* </AutoSizer> */}\r\n                </div>\r\n\r\n\r\n            </Paper>\r\n        }\r\n\r\n\r\n        return (\r\n\r\n\r\n            <Grid container style={{ backgroundColor: '#dddddd' }} >\r\n\r\n\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd' }}  ></Grid>\r\n                <Grid item xs={8}>\r\n                    {/* <Grid textAlign={'center'} xs={2} container style={{ backgroundColor: '#dddddd', height: '100vh' }} > </Grid> */}\r\n                    <Grid style={{ backgroundColor: '#dddddd', height: '100%' }} >\r\n\r\n\r\n\r\n                        <Grid style={{ fontStyle: \"\", backgroundColor: '#ffffff', width: '50%' }} >\r\n\r\n                            {texto}\r\n\r\n                            {componente}\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={1} style={{ backgroundColor: '#dddddd', height: '100vh' }}></Grid>\r\n                <Grid item xs={2} style={{ backgroundColor: '#FFFFFF' }}>\r\n\r\n\r\n                    <ButtonGroup orientation=\"vertical\" size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\" fullWidth>\r\n                        <Button style={{ marginTop: '5px' }} variant=\"contained\" color=\"primary\" onClick={(e) => this.password()}>Contraseña</Button >\r\n                        <Button style={{ marginTop: '5px' }} variant=\"contained\" color=\"primary\" onClick={(e) => this.corregirDias()}>Corregir Dias</Button >\r\n\r\n                    </ButtonGroup>\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Configuracion;","import React from 'react';\r\nimport '../styles/NavBar.css';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import { fontSize } from '@material-ui/system';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst button = {\r\n    fontSize:\"30px\", \r\n    height: \"80px\"\r\n  };\r\n\r\nconst BottomBar = () => (\r\n\r\n    <div className=\"top botones\">\r\n\r\n      <Grid item xs={12} md={12}>\r\n        <ButtonGroup fullWidth color=\"primary\" aria-label=\"full width outlined button group\">\r\n          <Button style={button} onClick={event =>  window.location.href='#venta'}>Venta</Button >\r\n          <Button style={button} onClick={event =>  window.location.href='#inventario'}>Inventario</Button>\r\n          <Button style={button} onClick={event =>  window.location.href='#reportes'}>Reportes</Button>\r\n          <Button style={button} onClick={event =>  window.location.href='#configuracion'}>Configuracion</Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default BottomBar;","import React from 'react';\r\n// import Top from './components/Top';\r\nimport Inventario from './components/Inventario';\r\nimport Reportes from './components/Reportes';\r\nimport Venta from './components/Venta';\r\nimport Configuracion from './components/Configuracion';\r\nimport BottomBar from './components/BottomBar';\r\n// import BarraDerecha from './components/BarraDerecha';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\n// import controllers from './routes/api-routes'\r\n\r\n// var user = require('./models/user');\r\n// var sequelize = require('./config/database');\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        productos:\"OK DENTRO\"\r\n    };\r\n\r\n  }\r\n  \r\n  // componentDidMount(){\r\n  //   console.log(controllers);\r\n  // }\r\n\r\n\r\nrender(){\r\n  return (\r\n    <Router>\r\n\r\n      <Switch>\r\n        <Route path=\"/venta\" exact component={Venta} />\r\n        <Route path=\"/inventario\" exact component={Inventario} />\r\n        <Route path=\"/reportes\" exact component={Reportes} />\r\n        <Route path=\"/configuracion\" exact component={Configuracion} />\r\n        <Route path=\"/test\" exact component={Venta} />\r\n        <Route path=\"/\"  component={Venta} />\r\n      </Switch> \r\n\r\n      <BottomBar />\r\n     \r\n    </Router>\r\n    \r\n  )\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}